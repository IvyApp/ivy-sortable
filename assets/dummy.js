eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/helpers\');\n    test(\'ember-cli-qunit/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/index.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/index.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/views\');\n    test(\'ember-cli-qunit/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/controllers/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n      model: Ember.A([\n        Ember.Object.create({ title: \'The Phantom Menace\' }),\n        Ember.Object.create({ title: \'Attack of the Clones\' }),\n        Ember.Object.create({ title: \'Revenge of the Sith\' }),\n        Ember.Object.create({ title: \'A New Hope\' }),\n        Ember.Object.create({ title: \'The Empire Strikes Back\' }),\n        Ember.Object.create({ title: \'Return of the Jedi\' }),\n        Ember.Object.create({ title: \'The Force Awakens\' })\n      ])\n    });\n  });//# sourceURL=dummy/controllers/index.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/helpers\');\n    test(\'ember-cli-content-security-policy/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/index.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/index.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/views\');\n    test(\'ember-cli-content-security-policy/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/helpers\');\n    test(\'ember-cli-esnext/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/index.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/index.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/views\');\n    test(\'ember-cli-esnext/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/index.js should pass jshint\', function() { \n      ok(true, \'ember-data/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/index.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/views\');\n    test(\'ember-data/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-data/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/helpers\');\n    test(\'ember-export-application-global/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/index.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/index.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/views\');\n    test(\'ember-export-application-global/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/helpers/ivy-sortable\", \n  [\"ivy-sortable/helpers/ivy-sortable\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ivySortableHelper = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = ivySortableHelper;\n  });//# sourceURL=dummy/helpers/ivy-sortable.js");

;eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;eval("define(\"dummy/ivy-sortable/tests/ivy-sortable/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ivy-sortable/helpers\');\n    test(\'ivy-sortable/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ivy-sortable/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ivy-sortable/tests/ivy-sortable/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/ivy-sortable/tests/ivy-sortable/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ivy-sortable\');\n    test(\'ivy-sortable/index.js should pass jshint\', function() { \n      ok(true, \'ivy-sortable/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ivy-sortable/tests/ivy-sortable/index.jshint.js");

;eval("define(\"dummy/ivy-sortable/tests/ivy-sortable/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ivy-sortable/views\');\n    test(\'ivy-sortable/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'ivy-sortable/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ivy-sortable/tests/ivy-sortable/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/ivy-sortable.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/index.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/index.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/views/ivy-sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/views\');\n    test(\'live-reload-middleware/views/ivy-sortable.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/views/ivy-sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/views/ivy-sortable.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"container\\\">\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  <hr>\\n  <p>View source on <a href=\\\"https://github.com/IvyApp/ivy-sortable\\\">GitHub</a>.</p>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1 class=\\\"page-header\\\">ivy-sortable</h1>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <p>Drag the items below to rearrange them.</p>\\n\\n    \");\n      stack1 = (helper = helpers[\'ivy-sortable\'] || (depth0 && depth0[\'ivy-sortable\']),options={hash:{\n        \'class\': (\"list-group\"),\n        \'cursor\': (\"move\"),\n        \'itemClassNames\': (\"list-group-item sortable-item\")\n      },hashTypes:{\'class\': \"STRING\",\'cursor\': \"STRING\",\'itemClassNames\': \"STRING\"},hashContexts:{\'class\': depth0,\'cursor\': depth0,\'itemClassNames\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"model\", options) : helperMissing.call(depth0, \"ivy-sortable\", \"model\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n    <p>The list is:</p>\\n\\n    <ol>\\n      \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ol>\\n  </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/index.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/controllers/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/index.js should pass jshint\', function() { \n      ok(true, \'controllers/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/index.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/views/ivy-sortable-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/views\');\n    test(\'dummy/tests/unit/views/ivy-sortable-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/views/ivy-sortable-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/views/ivy-sortable-test.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

;eval("define(\"dummy/tests/unit/views/ivy-sortable-test\", \n  [\"ember\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var moduleFor = __dependency2__.moduleFor;\n    var test = __dependency2__.test;\n\n    var people, containerView, view;\n\n    moduleFor(\'view:ivy-sortable\', \'view:ivy-sortable\', {\n      setup: function() {\n        people = Ember.A([\n          { name: \'Tyrion\' },\n          { name: \'Cersei\' }\n        ]);\n\n        view = this.subject({\n          content: people,\n\n          moved: \'moved\',\n\n          itemViewClass: Ember.View.extend({\n            template: Ember.Handlebars.compile(\'{{view.content.name}}\')\n          })\n        });\n\n        containerView = Ember.ContainerView.create();\n\n        Ember.run(function() {\n          containerView.pushObject(view);\n          containerView.appendTo(\'#ember-testing\');\n        });\n      },\n\n      teardown: function() {\n        Ember.run(containerView, \'destroy\');\n      }\n    });\n\n    test(\'should render the template for each item in an array\', function() {\n      equal(view.$().text(), \'TyrionCersei\');\n    });\n\n    test(\'should update the view if an item is added\', function() {\n      Ember.run(function() {\n        people.pushObject({ name: \'Tywin\' });\n      });\n\n      equal(view.$().text(), \'TyrionCerseiTywin\');\n    });\n\n    test(\'should update the view if an item is removed\', function() {\n      Ember.run(function() {\n        people.removeAt(0);\n      });\n\n      equal(view.$().text(), \'Cersei\');\n    });\n\n    test(\'should update the view if an item is replaced\', function() {\n      Ember.run(function() {\n        people.removeAt(0);\n        people.insertAt(0, { name: \'Jaime\' });\n      });\n\n      equal(view.$().text(), \'JaimeCersei\');\n    });\n\n    test(\'should update the view if an item is dragged\', function() {\n      view.$(\'li:eq(0)\').simulate(\'drag\', { dy: 22 });\n\n      equal(view.$().text(), \'CerseiTyrion\');\n    });\n\n    test(\'should update the content if an item is dragged\', function() {\n      view.$(\'li:eq(0)\').simulate(\'drag\', { dy: 22 });\n\n      deepEqual(people.mapBy(\'name\'), [\'Cersei\', \'Tyrion\']);\n    });\n\n    test(\'should become disabled if the disabled attribute is true\', function() {\n      Ember.run(function() { view.set(\'disabled\', true); });\n      view.$(\'li:eq(0)\').simulate(\'drag\', { dy: 22 });\n\n      equal(view.$().text(), \'TyrionCersei\', \'setting disabled to true disables dragging\');\n\n      Ember.run(function() { view.set(\'disabled\', false); });\n      view.$(\'li:eq(0)\').simulate(\'drag\', { dy: 22 });\n\n      equal(view.$().text(), \'CerseiTyrion\', \'setting disabled to false enables dragging\');\n    });\n\n    test(\'should trigger moved action after successful drag\', function() {\n      expect(3);\n\n      Ember.run(function() {\n        containerView.set(\'controller\', Ember.Object.create({\n          moved: function(item, oldIndex, newIndex) {\n            strictEqual(item, people.objectAt(1));\n            equal(oldIndex, 0);\n            equal(newIndex, 1);\n          }\n        }));\n      });\n\n      view.$(\'li:eq(0)\').simulate(\'drag\', { dy: 22 });\n    });\n\n    function optionTest(key, beforeValue, afterValue) {\n      test(\'should update jQuery UI \' + key + \' option when \' + key + \' property changes\', function() {\n        equal(view.$().sortable(\'option\', key), beforeValue,\n              \'precond - initial value of \' + key + \' option is correct\');\n\n        Ember.run(function() {\n          view.set(key, afterValue);\n        });\n\n        equal(view.$().sortable(\'option\', key), afterValue,\n              key + \' option is updated after \' + key + \' property is changed\');\n      });\n    }\n\n    optionTest(\'axis\', false, \'x\');\n    optionTest(\'containment\', false, \'parent\');\n    optionTest(\'cursor\', \'auto\', \'move\');\n    optionTest(\'cursorAt\', false, { left: 5 });\n    optionTest(\'delay\', 0, 150);\n    optionTest(\'disabled\', false, true);\n    optionTest(\'distance\', 1, 5);\n    optionTest(\'forceHelperSize\', false, true);\n    optionTest(\'forcePlaceholderSize\', false, true);\n    optionTest(\'grid\', false, [20, 10]);\n    optionTest(\'helper\', \'original\', \'clone\');\n    optionTest(\'opacity\', false, 0.5);\n    optionTest(\'placeholder\', false, \'sortable-placeholder\');\n    optionTest(\'revert\', false, true);\n    optionTest(\'scroll\', true, false);\n    optionTest(\'scrollSensitivity\', 20, 10);\n    optionTest(\'scrollSpeed\', 20, 40);\n    optionTest(\'tolerance\', \'intersect\', \'pointer\');\n    optionTest(\'zIndex\', 1000, 9999);\n  });//# sourceURL=dummy/tests/unit/views/ivy-sortable-test.js");

;eval("define(\"dummy/views/ivy-sortable\", \n  [\"ivy-sortable/views/ivy-sortable\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var IvySortableView = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = IvySortableView;\n  });//# sourceURL=dummy/views/ivy-sortable.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("dummy/tests/test-helper");
} else {
  require("dummy/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
